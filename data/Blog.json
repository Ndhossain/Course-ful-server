[
    {
        "id": 1,
        "question": "What is CORS?",
        "answer": "Cross-origin resource sharing (CORS) is a mechanism that allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was served. Assume that I have a static content at www.exampl.com and the backend API at api.example.com. This kind of request would be called a Cross-Origin request, as a resource from one subdomain is requesting a resource from another subdomain. This is all controlled through preflight requests that exchange a set of HTTP request headers and corresponding response headers collectively referred to as 'CORS Headers', each of these headers modifies a different element of the Same-Origin policy to loosen the limitations it imposes."
    },
    {
        "id": 2,
        "question": "Why are you using firebase? What other options do you have to implement authentication?",
        "answer": "Firebase is an app development platform that helps us to build and grow apps. Firebase concept is simple. When we build a client-side app with JavaScript or any of its frameworks, for instance, Google Firebase can turn this into a serverless app in no time. It also removes the need to manage databases ourself, as it does that for us. Therefore, implementing Firebase means plugging a ready-made backend into our client code to make it dynamic. Ultimately, it eliminates the need to write backend code from scratch and gives us a fully functional one instead.\n Firebase Authentcication system alternatives:\nAuth0: A set of unified APIs and tools that instantly enables Single Sign On and user management to all your applications.\nPassport: It is authentication middleware for Node.js. Extremely flexible and modular, It can be unobtrusively dropped in to any Express-based web application. A comprehensive set of strategies support authentication using a username and password, Facebook, Twitter, and more.\nOkta: Connect all your apps in days, not months, with instant access to thousands of pre-built integrations - even add apps to the network yourself. Integrations are easy to set up, constantly monitored, proactively repaired and handle authentication and provisioning.\nKeyCloak: It is an Open Source Identity and Access Management For Modern Applications and Services. It adds authentication to applications and secure services with minimum fuss. No need to deal with storing users or authenticating users. It's all available out of the box. Keycloak is a tool in the User Management and Authentication category of a tech stack."
    },
    {
        "id": 3,
        "question": "How does the private route work?",
        "answer": "PrivateRoute component is the blueprint for all private routes in the application. If the user is logged in, go on and display the component otherwise redirect the user to sign-in page. Suppose I have a checkout page and if the user want to checkout then he have to visit the checkout page where i need some information about user like adresses, phone-number. but if the user is not logged in i can not get the information so i have to protect the route and now I will tell the program that if the user is not logged in redirect him to login page otherwise let him visit to login page. We can use multiple option like if the user not verified don't let him in to the checkout page."
    },
    {
        "id": 4,
        "question": "What is Node? How does Node work?",
        "answer": "Node is a open-source JavaScript runtime that allows us to use JavaScript code outside browser. It is used as a backend service where javascript works on the server-side of the application. This way javascript is used on both frontend and backend. Node. js runs on chrome v8 engine which converts javascript code into machine code, it is highly scalable, lightweight, fast, and data-intensive\nNode.js accepts the request from the clients and sends the response, while working with the request node.js handles them with a single thread. To operate I/O operations or requests node.js use the concept of threads. Thread is a sequence of instructions that the server needs to perform. It runs parallel on the server to provide the information to multiple clients. Node.js is an event loop single-threaded language. It can handle concurrent requests with a single thread without blocking it for one request.\n\nNode.js basically works on two concept\n1.Asynchronous\n2Non-blocking I/O"
    }
]